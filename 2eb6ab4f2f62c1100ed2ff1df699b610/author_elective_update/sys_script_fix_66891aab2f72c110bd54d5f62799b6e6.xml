<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_fix">
    <sys_script_fix action="DELETE">
        <before>false</before>
        <description/>
        <name>Test</name>
        <record_for_rollback>true</record_for_rollback>
        <script><![CDATA[//dev16718.service-now.com/nav_to.do?uri=x_298439_mjml_templates.do?sys_id=a618a86f2fe201100ed2ff1df699b661
var current = new GlideRecord('x_298439_mjml_templates');
current.get('a618a86f2fe201100ed2ff1df699b661');

(function executeRule(current, previous /*null when async*/ ) {
    // Add your code here
	if(gs.getProperty('x_298439_mjml.api.key') == ''){
		gs.error('x_298439_mjml.api.key is empty');
		return;
	}
    var apiKey = gs.getProperty('x_298439_mjml.api.key').split(':');
    var un = apiKey[0].toString();
    var pw = apiKey[1].toString();
    var obj = {};
    obj.mjml = current.mjml.trim();
    var endpoint = gs.getProperty('x_298439_mjml.api.endpoint');
    var request = new sn_ws.RESTMessageV2();
    request.setHttpMethod('post');
    request.setBasicAuth(un, pw);
    request.setEndpoint(endpoint);
    request.setRequestHeader('Content-Type', 'application/json');
    request.setRequestBody(JSON.stringify(obj));
    var response = request.execute();
    var evaluator = new GlideScopedEvaluator();
    var output = evaluator.evaluateScript(current, "template_variables", null);
    try{
	var returnedHTML = JSON.parse(response.getBody()).html;
    for (var prop in output) {
        var replaceString = '{{mjml.' + prop + '}}';
        var regex = new RegExp(replaceString, 'g');
        returnedHTML = returnedHTML.replace(regex, output[prop]);
    }
    current.setValue('html', returnedHTML);
    current.update();
	} catch(error){
		gs.error('Error with response for MJML: ' + error);
	}
})(current, previous);]]></script>
        <sys_class_name>sys_script_fix</sys_class_name>
        <sys_created_by>jacebenson</sys_created_by>
        <sys_created_on>2022-04-17 20:45:59</sys_created_on>
        <sys_id>66891aab2f72c110bd54d5f62799b6e6</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Test</sys_name>
        <sys_package display_value="MJML" source="x_298439_mjml">2eb6ab4f2f62c1100ed2ff1df699b610</sys_package>
        <sys_policy/>
        <sys_scope display_value="MJML">2eb6ab4f2f62c1100ed2ff1df699b610</sys_scope>
        <sys_update_name>sys_script_fix_66891aab2f72c110bd54d5f62799b6e6</sys_update_name>
        <sys_updated_by>jacebenson</sys_updated_by>
        <sys_updated_on>2022-04-17 20:45:59</sys_updated_on>
        <unloadable>false</unloadable>
    </sys_script_fix>
    <sys_update_version action="INSERT_OR_UPDATE">
        <action>DELETE</action>
        <application display_value="MJML">2eb6ab4f2f62c1100ed2ff1df699b610</application>
        <file_path/>
        <instance_id>8f6019ec6fcb02004c327b2f5d3ee45b</instance_id>
        <instance_name>dev16718</instance_name>
        <name>sys_script_fix_66891aab2f72c110bd54d5f62799b6e6</name>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_fix"&gt;&lt;sys_script_fix action="INSERT_OR_UPDATE"&gt;&lt;before&gt;false&lt;/before&gt;&lt;description/&gt;&lt;name&gt;Test&lt;/name&gt;&lt;record_for_rollback&gt;true&lt;/record_for_rollback&gt;&lt;script&gt;&lt;![CDATA[//dev16718.service-now.com/nav_to.do?uri=x_298439_mjml_templates.do?sys_id=a618a86f2fe201100ed2ff1df699b661
var current = new GlideRecord('x_298439_mjml_templates');
current.get('a618a86f2fe201100ed2ff1df699b661');

(function executeRule(current, previous /*null when async*/ ) {
    // Add your code here
	if(gs.getProperty('x_298439_mjml.api.key') == ''){
		gs.error('x_298439_mjml.api.key is empty');
		return;
	}
    var apiKey = gs.getProperty('x_298439_mjml.api.key').split(':');
    var un = apiKey[0].toString();
    var pw = apiKey[1].toString();
    var obj = {};
    obj.mjml = current.mjml.trim();
    var endpoint = gs.getProperty('x_298439_mjml.api.endpoint');
    var request = new sn_ws.RESTMessageV2();
    request.setHttpMethod('post');
    request.setBasicAuth(un, pw);
    request.setEndpoint(endpoint);
    request.setRequestHeader('Content-Type', 'application/json');
    request.setRequestBody(JSON.stringify(obj));
    var response = request.execute();
    var evaluator = new GlideScopedEvaluator();
    var output = evaluator.evaluateScript(current, "template_variables", null);
    try{
	var returnedHTML = JSON.parse(response.getBody()).html;
    for (var prop in output) {
        var replaceString = '{{mjml.' + prop + '}}';
        var regex = new RegExp(replaceString, 'g');
        returnedHTML = returnedHTML.replace(regex, output[prop]);
    }
    current.setValue('html', returnedHTML);
    current.update();
	} catch(error){
		gs.error('Error with response for MJML: ' + error);
	}
})(current, previous);]]&gt;&lt;/script&gt;&lt;sys_class_name&gt;sys_script_fix&lt;/sys_class_name&gt;&lt;sys_created_by&gt;jacebenson&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2022-04-17 20:45:59&lt;/sys_created_on&gt;&lt;sys_id&gt;66891aab2f72c110bd54d5f62799b6e6&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_name&gt;Test&lt;/sys_name&gt;&lt;sys_package display_value="MJML" source="x_298439_mjml"&gt;2eb6ab4f2f62c1100ed2ff1df699b610&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="MJML"&gt;2eb6ab4f2f62c1100ed2ff1df699b610&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_script_fix_66891aab2f72c110bd54d5f62799b6e6&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;jacebenson&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2022-04-17 20:45:59&lt;/sys_updated_on&gt;&lt;unloadable&gt;false&lt;/unloadable&gt;&lt;/sys_script_fix&gt;&lt;/record_update&gt;</payload>
        <payload_hash>780759564</payload_hash>
        <record_name>Test</record_name>
        <reverted_from/>
        <source>78191a6b2f72c110bd54d5f62799b65f</source>
        <source_table>sys_update_set</source_table>
        <state>previous</state>
        <sys_created_by>jacebenson</sys_created_by>
        <sys_created_on>2022-04-17 20:45:59</sys_created_on>
        <sys_id>b8b91e6b2f72c110bd54d5f62799b662</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_recorded_at>180394672fd0000001</sys_recorded_at>
        <sys_updated_by>jacebenson</sys_updated_by>
        <sys_updated_on>2022-04-17 20:45:59</sys_updated_on>
        <type>Fix Script</type>
        <update_guid>f0b91e6b1672c11053d5564ca03d5162</update_guid>
        <update_guid_history>f0b91e6b1672c11053d5564ca03d5162:780759564</update_guid_history>
    </sys_update_version>
    <sys_metadata_delete action="INSERT_OR_UPDATE">
        <sys_audit_delete/>
        <sys_class_name>sys_metadata_delete</sys_class_name>
        <sys_created_by>jacebenson</sys_created_by>
        <sys_created_on>2022-04-17 21:05:12</sys_created_on>
        <sys_db_object display_value="" name="sys_script_fix">sys_script_fix</sys_db_object>
        <sys_id>3581cd125a574a1093c3497554528790</sys_id>
        <sys_metadata>66891aab2f72c110bd54d5f62799b6e6</sys_metadata>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Test</sys_name>
        <sys_package display_value="MJML" source="x_298439_mjml">2eb6ab4f2f62c1100ed2ff1df699b610</sys_package>
        <sys_parent/>
        <sys_policy/>
        <sys_scope display_value="MJML">2eb6ab4f2f62c1100ed2ff1df699b610</sys_scope>
        <sys_scope_delete display_value="">147ba54de0824e60929d8e416c836400</sys_scope_delete>
        <sys_update_name>sys_script_fix_66891aab2f72c110bd54d5f62799b6e6</sys_update_name>
        <sys_update_version display_value="sys_script_fix_66891aab2f72c110bd54d5f62799b6e6">b8b91e6b2f72c110bd54d5f62799b662</sys_update_version>
        <sys_updated_by>jacebenson</sys_updated_by>
        <sys_updated_on>2022-04-17 21:05:12</sys_updated_on>
    </sys_metadata_delete>
</record_update>
